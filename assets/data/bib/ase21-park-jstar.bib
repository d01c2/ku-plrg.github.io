@inproceedings{10.1109/ASE51524.2021.9678781,
  author = {Park, Jihyeok and An, Seungmin and Shin, Wonho and Sim, Yusung and Ryu, Sukyoung},
  title = {{JSTAR: JavaScript Specification Type Analyzer Using Refinement}},
  year = {2021},
  isbn = {9781665403375},
  publisher = {IEEE Press},
  url = {https://doi.org/10.1109/ASE51524.2021.9678781},
  doi = {10.1109/ASE51524.2021.9678781},
  abstract = {JavaScript is one of the mainstream programming languages for client-side programming, server-side programming, and even embedded systems. Various JavaScript engines developed and maintained in diverse fields must conform to the syntax and semantics described in ECMAScript, the standard specification of JavaScript. Since an incorrect description in ECMAScript can lead to wrong JavaScript engine implementations, checking the correctness of ECMAScript is critical and essential. However, all the specification updates are currently manually reviewed by the Ecma Technical Committee 39 (TC39) without any automated tools. Moreover, in late 2014, the committee announced the yearly release cadence and open development process of ECMAScript to quickly adapt to evolving development environments. Because of such frequent updates, checking the correctness of ECMAScript becomes more labor-intensive and error-prone.To alleviate the problem, we propose JSTAR, a JavaScript Specification Type Analyzer using Refinement. It is the first tool that performs type analysis on JavaScript specifications and detects specification bugs using a bug detector. For a given specification, JSTAR first compiles each abstract algorithm written in a structured natural language to a corresponding function in IRES, an untyped intermediate representation for ECMAScript. Then, it performs type analysis for compiled functions with specification types defined in ECMAScript. Based on the result of type analysis, JSTAR detects specification bugs using a bug detector consisting of four checkers. To increase the precision of the type analysis, we present condition-based refinement for type analysis, which prunes out infeasible abstract states using conditions of assertions and branches. We evaluated JSTAR with all 864 versions in the official ECMAScript repository for the recent three years from 2018 to 2021. JSTAR took 137.3 seconds on average to perform type analysis for each version, and detected 157 type-related specification bugs with 59.2% precision; 93 out of 157 bugs are true bugs. Among them, 14 bugs are newly detected by JSTAR, and the committee confirmed them all.},
  booktitle = {Proceedings of the 36th IEEE/ACM International Conference on Automated Software Engineering},
  pages = {606â€“616},
  numpages = {11},
  keywords = {mechanized specification, JavaScript, refinement, type analysis, bug detection},
  location = {Melbourne, Australia},
  series = {ASE 2021}
}
